html {
    width: 100%;
    height: 120%;
    font-size: 75%;
}



body {
    margin: 20px;
    padding: 0px;
    border: 0px;
  font-size: 1.4rem;
  font-family: "Open Sans", sans-serif;
  color: #0a263d;

  background: linear-gradient(0deg, #c0e2f9, #b2bfc8);

}
/*
section_head {
    left: 0px;
    background: #d611d1;

}
*/


header {
    top: 0;
    left: 0;

    margin: 0px;
    padding: 0px;
    border: 0px;
    position: fixed;
    width: 100%;
    height: 8%;
    text-align: left;



    margin-right: var(--removed-body-scroll-bar-size);
    display: flex;
    flex-direction: column;
    left: 0px;
    right: 0px;
    -webkit-box-align: center;
    /*
    align-items: center;
    */
    z-index: var(--layer-header);
    transition: background 400ms ease 0s;

    background: rgba(0,0,0,0.1);
    /* opacity: 0.5; */

    backdrop-filter: blur(2px);
}

.inner_header{
    margin: 0% 2%;

}


main{
    margin: 80px auto;
    height: 100%;
}


/*
*::first-letter {
    color: #145992;
}
*/

p {
  color: #134c7b;
}

a:link {
  text-decoration: none;
}

header:hover{
    background: rgba(0,0,0,0.15);
    backdrop-filter: blur(3px);
}


a:hover {
    color: #da8ef8;
}

/* изменение при наведении*/
li:hover {
    color: #1d71b6;


    /*
    background: rgba(0,0,0,0.1);
    font-weight:bold
    */

    /* color: #fdc073; */
    /* opacity: 0.5; */
}

ul.mainmenu {
	list-style: none;
	margin: 0;
	padding: 0;
	height: 60px;
	font-size: 30px;
	overflow: hidden;
}
ul.mainmenu li {
	float: left;
	margin: 18px 40px 0 30px;
}
ul.mainmenu li.logo {margin: 0;}
ul.mainmenu li.last {float: right;}


ul.pag1 {
	list-style: none;
	margin: 0;
	padding: 0;
	height: 60px;
	font-size: 30px;
	overflow: hidden;
}
ul.pag1 li {
	float: left;
	margin: 18px 40px 0 30px;
}



/*
p:hover {
  background-color: #f67deb;
}
*/
/*
p {
  color: #134c7b;
}
*/

/*
hr {
  color: #fefbfe;
}
*/

.logo {
	background: url('../images/logo.png') no-repeat 10px 5px;
	width: 70px;
	height: 60px;
}


.card {
    reverse:                false, /* reverse the tilt direction */
    max:                    1,     /* max tilt rotation (degrees) */
    startX:                 0,      /* the starting tilt on the X axis, in degrees. */
    startY:                 0,      /* the starting tilt on the Y axis, in degrees. */
    perspective:            1000,   /* Transform perspective, the lower the more extreme the tilt gets. */
    scale:                  2,      /*2 = 200%, 1.5 = 150%, etc.. */
    speed:                  300,    // Speed of the enter/exit transition
    transition:             true,   // Set a transition on enter/exit.
    axis:                   null,   // What axis should be enabled. Can be "x" or "y"
    reset:                  true,   // If the tilt effect has to be reset on exit.
    easing:                 "cubic-bezier(.03,.98,.52,.99)",    // Easing on enter/exit.
    glare:                  false,  // if it should have a "glare" effect
    "max-glare":            1,      // the maximum "glare" opacity (1 = 100%, 0.5 = 50%)
    "glare-prerender":      false,  // false = VanillaTilt creates the glare elements for you, otherwise
                                    // you need to add .js-tilt-glare>.js-tilt-glare-inner by yourself
    "mouse-event-element":  null,   // css-selector or link to HTML-element what will be listen mouse events
    gyroscope:              true,   // Boolean to enable/disable device orientation detection,
    gyroscopeMinAngleX:     -45,    // This is the bottom limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the left border of the element;
    gyroscopeMaxAngleX:     45,     // This is the top limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the right border of the element;
    gyroscopeMinAngleY:     -45,    // This is the bottom limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the top border of the element;
    gyroscopeMaxAngleY:     45,     // This is the top limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the bottom border of the element;
}

.form-input {
    width: 300px;
    font-size: 16px;
}

.form-label {
    display: inline-block;
    min-width: 150px;
    vertical-align: top;
}

.form-error ul {
    list-style: none;
    padding: 0;
    color: #CC0000;
}

.form-button {
    min-width: 200px;
    font-size: 16px;
}
/*

.card {
position: relative;
width: 300px;
height: 100px;
color: white;
}
.card__front{
z-index: 1;
position: relative;
background-color: cyan;
height: 100%;
text-align: center;
backface-visibility: hidden;
transition: transform .3s cubic-bezier(.2,.85,.4,1.275);
}
.card__back{
z-index: 0;
position: absolute;
top: 0;
width: 100%;
height: 100%;
text-align: center;
backface-visibility: hidden;
background-color: orange;
transform: rotateY(-180deg);
transition: transform .3s cubic-bezier(.2,.85,.4,1.275);
}
.card:hover .card__back {
transform: rotateY(0deg);
z-index: 2;
}
.card:hover .card__front {
transform: rotateY(180deg);
z-index: -1;
}

